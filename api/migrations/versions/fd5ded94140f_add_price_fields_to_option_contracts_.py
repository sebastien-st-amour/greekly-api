"""add price fields to option_contracts table

Revision ID: fd5ded94140f
Revises: 073ee366f7bb
Create Date: 2021-12-24 18:14:17.307044

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fd5ded94140f'
down_revision = '073ee366f7bb'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('temp_option_details')
    op.drop_table('temp_table')
    op.drop_table('option_contracts_staging')
    op.drop_table('option_contract_prices_staging')
    op.add_column('option_contracts', sa.Column('bid_price', sa.Numeric(precision=14, scale=2), nullable=True))
    op.add_column('option_contracts', sa.Column('bid_size', sa.Integer(), nullable=True))
    op.add_column('option_contracts', sa.Column('ask_price', sa.Numeric(precision=14, scale=2), nullable=True))
    op.add_column('option_contracts', sa.Column('ask_size', sa.Integer(), nullable=True))
    op.add_column('option_contracts', sa.Column('last_trade_price_tr_hrs', sa.Numeric(precision=14, scale=2), nullable=True))
    op.add_column('option_contracts', sa.Column('last_trade_price', sa.Numeric(precision=14, scale=2), nullable=True))
    op.add_column('option_contracts', sa.Column('last_trade_size', sa.Integer(), nullable=True))
    op.add_column('option_contracts', sa.Column('last_trade_tick', sa.String(length=10), nullable=True))
    op.add_column('option_contracts', sa.Column('last_trade_time', sa.DateTime(), nullable=True))
    op.add_column('option_contracts', sa.Column('volume', sa.Integer(), nullable=True))
    op.add_column('option_contracts', sa.Column('open_price', sa.Numeric(precision=14, scale=2), nullable=True))
    op.add_column('option_contracts', sa.Column('high_price', sa.Numeric(precision=14, scale=2), nullable=True))
    op.add_column('option_contracts', sa.Column('low_price', sa.Numeric(precision=14, scale=2), nullable=True))
    op.add_column('option_contracts', sa.Column('volatility', sa.Numeric(precision=14, scale=2), nullable=True))
    op.add_column('option_contracts', sa.Column('delta', sa.Numeric(precision=8, scale=6), nullable=True))
    op.add_column('option_contracts', sa.Column('gamma', sa.Numeric(precision=8, scale=6), nullable=True))
    op.add_column('option_contracts', sa.Column('theta', sa.Numeric(precision=8, scale=6), nullable=True))
    op.add_column('option_contracts', sa.Column('vega', sa.Numeric(precision=8, scale=6), nullable=True))
    op.add_column('option_contracts', sa.Column('rho', sa.Numeric(precision=8, scale=6), nullable=True))
    op.add_column('option_contracts', sa.Column('open_interest', sa.Integer(), nullable=True))
    op.add_column('option_contracts', sa.Column('delay', sa.Integer(), nullable=True))
    op.add_column('option_contracts', sa.Column('is_halted', sa.Boolean(), nullable=True))
    op.add_column('option_contracts', sa.Column('vwap', sa.Numeric(precision=14, scale=2), nullable=True))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('option_contracts', 'vwap')
    op.drop_column('option_contracts', 'is_halted')
    op.drop_column('option_contracts', 'delay')
    op.drop_column('option_contracts', 'open_interest')
    op.drop_column('option_contracts', 'rho')
    op.drop_column('option_contracts', 'vega')
    op.drop_column('option_contracts', 'theta')
    op.drop_column('option_contracts', 'gamma')
    op.drop_column('option_contracts', 'delta')
    op.drop_column('option_contracts', 'volatility')
    op.drop_column('option_contracts', 'low_price')
    op.drop_column('option_contracts', 'high_price')
    op.drop_column('option_contracts', 'open_price')
    op.drop_column('option_contracts', 'volume')
    op.drop_column('option_contracts', 'last_trade_time')
    op.drop_column('option_contracts', 'last_trade_tick')
    op.drop_column('option_contracts', 'last_trade_size')
    op.drop_column('option_contracts', 'last_trade_price')
    op.drop_column('option_contracts', 'last_trade_price_tr_hrs')
    op.drop_column('option_contracts', 'ask_size')
    op.drop_column('option_contracts', 'ask_price')
    op.drop_column('option_contracts', 'bid_size')
    op.drop_column('option_contracts', 'bid_price')
    op.create_table('option_contract_prices_staging',
    sa.Column('bid_price', sa.NUMERIC(precision=14, scale=2), autoincrement=False, nullable=True),
    sa.Column('bid_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ask_price', sa.NUMERIC(precision=14, scale=2), autoincrement=False, nullable=True),
    sa.Column('ask_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_trade_price_tr_hrs', sa.NUMERIC(precision=14, scale=2), autoincrement=False, nullable=True),
    sa.Column('last_trade_price', sa.NUMERIC(precision=14, scale=2), autoincrement=False, nullable=True),
    sa.Column('last_trade_size', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('last_trade_tick', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('last_trade_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('volume', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('open_price', sa.NUMERIC(precision=14, scale=2), autoincrement=False, nullable=True),
    sa.Column('high_price', sa.NUMERIC(precision=14, scale=2), autoincrement=False, nullable=True),
    sa.Column('low_price', sa.NUMERIC(precision=14, scale=2), autoincrement=False, nullable=True),
    sa.Column('volatility', sa.NUMERIC(precision=14, scale=2), autoincrement=False, nullable=True),
    sa.Column('delta', sa.NUMERIC(precision=8, scale=6), autoincrement=False, nullable=True),
    sa.Column('gamma', sa.NUMERIC(precision=8, scale=6), autoincrement=False, nullable=True),
    sa.Column('theta', sa.NUMERIC(precision=8, scale=6), autoincrement=False, nullable=True),
    sa.Column('vega', sa.NUMERIC(precision=8, scale=6), autoincrement=False, nullable=True),
    sa.Column('rho', sa.NUMERIC(precision=8, scale=6), autoincrement=False, nullable=True),
    sa.Column('open_interest', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('delay', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_halted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('vwap', sa.NUMERIC(precision=14, scale=2), autoincrement=False, nullable=True),
    sa.Column('option_contract_id', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('option_contracts_staging',
    sa.Column('type', postgresql.ENUM('C', 'P', name='optiontypes'), autoincrement=False, nullable=True),
    sa.Column('broker_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('expiration_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('strike_price', sa.NUMERIC(precision=14, scale=2), autoincrement=False, nullable=True),
    sa.Column('stock_id', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.create_table('temp_table',
    sa.Column('expiryDate', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('listingExchange', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('optionExerciseType', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('optionRoot', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('multiplier', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('strikePrice', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('type', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('brokerId', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('underlyingId', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('greeklyStockId', sa.BIGINT(), autoincrement=False, nullable=True)
    )
    op.create_table('temp_option_details',
    sa.Column('underlying', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('underlyingId', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('symbol', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('symbolId', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('bidPrice', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bidSize', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('askPrice', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('askSize', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('lastTradePriceTrHrs', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('lastTradePrice', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('lastTradeSize', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('lastTradeTick', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('lastTradeTime', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('volume', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('openPrice', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('highPrice', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('lowPrice', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('volatility', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('delta', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('gamma', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('theta', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('vega', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('rho', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('openInterest', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('delay', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('isHalted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('VWAP', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('option_contract_id', sa.INTEGER(), autoincrement=False, nullable=True)
    )
    # ### end Alembic commands ###
